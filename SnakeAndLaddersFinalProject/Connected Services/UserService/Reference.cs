//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SnakeAndLaddersFinalProject.UserService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountDto", Namespace="http://schemas.datacontract.org/2004/07/SnakeAndLadders.Contracts.Dtos")]
    [System.SerializableAttribute()]
    public partial class AccountDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CoinsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasProfilePhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfileDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Coins {
            get {
                return this.CoinsField;
            }
            set {
                if ((this.CoinsField.Equals(value) != true)) {
                    this.CoinsField = value;
                    this.RaisePropertyChanged("Coins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasProfilePhoto {
            get {
                return this.HasProfilePhotoField;
            }
            set {
                if ((this.HasProfilePhotoField.Equals(value) != true)) {
                    this.HasProfilePhotoField = value;
                    this.RaisePropertyChanged("HasProfilePhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProfileDescription {
            get {
                return this.ProfileDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfileDescriptionField, value) != true)) {
                    this.ProfileDescriptionField = value;
                    this.RaisePropertyChanged("ProfileDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProfilePhotoDto", Namespace="http://schemas.datacontract.org/2004/07/SnakeAndLadders.Contracts.Dtos")]
    [System.SerializableAttribute()]
    public partial class ProfilePhotoDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetProfileByUsername", ReplyAction="http://tempuri.org/IUserService/GetProfileByUsernameResponse")]
        SnakeAndLaddersFinalProject.UserService.AccountDto GetProfileByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetProfileByUsername", ReplyAction="http://tempuri.org/IUserService/GetProfileByUsernameResponse")]
        System.Threading.Tasks.Task<SnakeAndLaddersFinalProject.UserService.AccountDto> GetProfileByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetProfilePhoto", ReplyAction="http://tempuri.org/IUserService/GetProfilePhotoResponse")]
        SnakeAndLaddersFinalProject.UserService.ProfilePhotoDto GetProfilePhoto(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetProfilePhoto", ReplyAction="http://tempuri.org/IUserService/GetProfilePhotoResponse")]
        System.Threading.Tasks.Task<SnakeAndLaddersFinalProject.UserService.ProfilePhotoDto> GetProfilePhotoAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateProfile", ReplyAction="http://tempuri.org/IUserService/UpdateProfileResponse")]
        bool UpdateProfile(SnakeAndLaddersFinalProject.UserService.AccountDto profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateProfile", ReplyAction="http://tempuri.org/IUserService/UpdateProfileResponse")]
        System.Threading.Tasks.Task<bool> UpdateProfileAsync(SnakeAndLaddersFinalProject.UserService.AccountDto profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateProfilePhoto", ReplyAction="http://tempuri.org/IUserService/UpdateProfilePhotoResponse")]
        bool UpdateProfilePhoto(SnakeAndLaddersFinalProject.UserService.ProfilePhotoDto photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateProfilePhoto", ReplyAction="http://tempuri.org/IUserService/UpdateProfilePhotoResponse")]
        System.Threading.Tasks.Task<bool> UpdateProfilePhotoAsync(SnakeAndLaddersFinalProject.UserService.ProfilePhotoDto photo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : SnakeAndLaddersFinalProject.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<SnakeAndLaddersFinalProject.UserService.IUserService>, SnakeAndLaddersFinalProject.UserService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SnakeAndLaddersFinalProject.UserService.AccountDto GetProfileByUsername(string username) {
            return base.Channel.GetProfileByUsername(username);
        }
        
        public System.Threading.Tasks.Task<SnakeAndLaddersFinalProject.UserService.AccountDto> GetProfileByUsernameAsync(string username) {
            return base.Channel.GetProfileByUsernameAsync(username);
        }
        
        public SnakeAndLaddersFinalProject.UserService.ProfilePhotoDto GetProfilePhoto(int userId) {
            return base.Channel.GetProfilePhoto(userId);
        }
        
        public System.Threading.Tasks.Task<SnakeAndLaddersFinalProject.UserService.ProfilePhotoDto> GetProfilePhotoAsync(int userId) {
            return base.Channel.GetProfilePhotoAsync(userId);
        }
        
        public bool UpdateProfile(SnakeAndLaddersFinalProject.UserService.AccountDto profile) {
            return base.Channel.UpdateProfile(profile);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateProfileAsync(SnakeAndLaddersFinalProject.UserService.AccountDto profile) {
            return base.Channel.UpdateProfileAsync(profile);
        }
        
        public bool UpdateProfilePhoto(SnakeAndLaddersFinalProject.UserService.ProfilePhotoDto photo) {
            return base.Channel.UpdateProfilePhoto(photo);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateProfilePhotoAsync(SnakeAndLaddersFinalProject.UserService.ProfilePhotoDto photo) {
            return base.Channel.UpdateProfilePhotoAsync(photo);
        }
    }
}
