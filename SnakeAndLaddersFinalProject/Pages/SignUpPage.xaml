<Page x:Class="SnakeAndLaddersFinalProject.Pages.SignUpPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:language="clr-namespace:SnakeAndLaddersFinalProject.Properties.Langs"
      xmlns:util="clr-namespace:SnakeAndLaddersFinalProject.Utilities"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      mc:Ignorable="d"
      d:DesignHeight="768" d:DesignWidth="1152"
      Title="SignUpPage" util:PageBackground.Key="Auth">

    <!-- ===== Recursos: mismos estilos que Login + pestañas invertidas ===== -->
    <Page.Resources>
        <SolidColorBrush x:Key="LoginBlue" Color="#209AD6"/>
        <SolidColorBrush x:Key="LoginBlueDark" Color="#1A85B3"/>
        <SolidColorBrush x:Key="ButtonPressedColor" Color="#194062"/>
        <SolidColorBrush x:Key="ButtonHoverColor" Color="#30A9E6"/>

        <!-- Botón principal -->
        <Style x:Key="LoginButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource LoginBlue}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="8,6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource ButtonHoverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource ButtonPressedColor}"/>
                                <Setter TargetName="ButtonBorder" Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform Y="1"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ButtonBorder" Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TextBox redondeado -->
        <Style x:Key="RoundedTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#FFFBF7E0"/>
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <ScrollViewer x:Name="PART_ContentHost" Background="Transparent"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource LoginBlue}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Bd" Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- PasswordBox redondeado -->
        <Style x:Key="RoundedPasswordBoxStyle" TargetType="PasswordBox">
            <Setter Property="Background" Value="#FFFBF7E0"/>
            <Setter Property="BorderBrush" Value="#E0E0E0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="6"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="5">
                            <ScrollViewer x:Name="PART_ContentHost" Background="Transparent"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource LoginBlue}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Bd" Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Botón tipo link -->
        <Style x:Key="LinkButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource LoginBlue}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <TextBlock x:Name="LinkText"
                                       Text="{TemplateBinding Content}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="LinkText" Property="TextDecorations" Value="Underline"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="#007ACC"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Toggle “Login / Sign up” -->
        <Style x:Key="NavLinkToggleStyle" TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#666666"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontSize" Value="24"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Background="{TemplateBinding Background}">
                            <TextBlock x:Name="Txt"
                                       Text="{TemplateBinding Content}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Txt" Property="Foreground" Value="Black"/>
                                <Setter TargetName="Txt" Property="FontWeight" Value="Bold"/>
                                <Setter TargetName="Txt" Property="TextDecorations" Value="Underline"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Txt" Property="TextDecorations" Value="Underline"/>
                                <Setter TargetName="Txt" Property="Foreground" Value="{StaticResource LoginBlue}"/>
                            </MultiTrigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Txt" Property="Foreground" Value="#333333"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="NavLinkLoginStyle" TargetType="ToggleButton" BasedOn="{StaticResource NavLinkToggleStyle}"/>
        <Style x:Key="NavLinkSignUpStyle" TargetType="ToggleButton" BasedOn="{StaticResource NavLinkToggleStyle}"/>

        <!-- Estados fijos invertidos (esta página es Sign Up) -->
        <sys:Boolean x:Key="TabChecked_Login">False</sys:Boolean>
        <sys:Boolean x:Key="TabChecked_SignUp">True</sys:Boolean>
    </Page.Resources>

    <!-- ===== Contenedor base: mismo tamaño y fondo ===== -->
    <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="979" Height="450">
        <Image Source="/Pages/loginFrame.png"
               Stretch="Fill"
               Panel.ZIndex="0"
               Margin="318,29,319,37"/>

        <!-- ===== Canvas libre (sin grids/paneles de alineación) ===== -->
        <Canvas Panel.ZIndex="1" Width="979" Height="450" Background="Transparent">

            <!-- Settings (misma posición que en Login) -->
            <Button x:Name="btnSettings"
                    Content="{x:Static language:Lang.btnSettingsText}"
                    Style="{x:Null}"
                    Width="120"
                    Height="30"
                    Canvas.Left="721"  Canvas.Top="40"/>

            <!-- Pestañas: Login (gris, hace back) y Sign Up (subrayado fijo) -->
            <ToggleButton x:Name="btnNavLogin"
                          Content="{x:Static language:Lang.btnLoginText}"
                          Style="{StaticResource NavLinkToggleStyle}"
                          IsChecked="{Binding Source={StaticResource TabChecked_Login}, Mode=OneWay}"
                          Click="BtnBack_Click"
                          Width="116"  Height="26"
                          Canvas.Left="355" Canvas.Top="156" FontSize="18" HorizontalAlignment="Left" VerticalAlignment="Center"/>

            <ToggleButton x:Name="btnNavSignUp"
                          Content="{x:Static language:Lang.btnSignUpText}"
                          Style="{StaticResource NavLinkToggleStyle}"
                          IsChecked="{Binding Source={StaticResource TabChecked_SignUp}, Mode=OneWay}"
                          Width="100" Height="27"
                          Canvas.Left="541" Canvas.Top="156" FontSize="18" HorizontalAlignment="Center" VerticalAlignment="Top"/>

            <!-- ===== Campos: coloca a gusto moviendo Left/Top ===== -->

            <!-- Nombre -->
            <Label Content="{x:Static language:Lang.txtNameOfUserText}"
                   Canvas.Left="344" Canvas.Top="182" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Yu Gothic UI"/>
            <TextBox x:Name="txtNameOfUser"
                     Style="{StaticResource RoundedTextBoxStyle}"
                     Width="127"
                     Canvas.Left="344" Canvas.Top="208" HorizontalAlignment="Center" VerticalAlignment="Center" Background="White" Height="23"/>

            <!-- Apellidos -->
            <Label Content="{x:Static language:Lang.txtLastNameOfUserText}"
                   Canvas.Left="514" Canvas.Top="182" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Yu Gothic UI"/>
            <TextBox x:Name="txtLastname"
                     Style="{StaticResource RoundedTextBoxStyle}"
                     Width="127"
                     Canvas.Left="514" Canvas.Top="208" HorizontalAlignment="Center" VerticalAlignment="Center" Background="White" Height="23"/>

            <!-- Username -->
            <Label Content="{x:Static language:Lang.txtUsernameText}"
                   Canvas.Left="344" Canvas.Top="236" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Yu Gothic UI"/>
            <TextBox x:Name="txtUsername"
                     Style="{StaticResource RoundedTextBoxStyle}"
                     Width="127"
                     Canvas.Left="344" Canvas.Top="262" HorizontalAlignment="Center" VerticalAlignment="Center" Background="White" Height="26"/>

            <!-- Password -->
            <Label Content="{x:Static language:Lang.pwdPasswordText}"
                   Canvas.Left="514" Canvas.Top="236" HorizontalAlignment="Center" VerticalAlignment="Top" RenderTransformOrigin="0.556,-0.177" FontFamily="Yu Gothic UI"/>
            <PasswordBox x:Name="pwdPassword"
                         Style="{StaticResource RoundedPasswordBoxStyle}"
                         Width="127"
                         Canvas.Left="514" Canvas.Top="262" HorizontalAlignment="Center" VerticalAlignment="Top" Background="White" Height="26"/>

            <!-- Email -->
            <Label Content="{x:Static language:Lang.txtRegEmailText}"
                   Canvas.Left="435" Canvas.Top="288" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <TextBox x:Name="txtEmail"
                     Style="{StaticResource RoundedTextBoxStyle}"
                     Width="198"
                     Canvas.Left="390" Canvas.Top="313" HorizontalAlignment="Left" VerticalAlignment="Top" Background="White" Height="26"/>

            <!-- Botón Sign Up (centrado aprox) -->
            <Button x:Name="btnSignUp"
                    Content="{x:Static language:Lang.btnSignUpText}"
                    Click="BtnSignUp_Click"
                    Style="{StaticResource LoginButtonStyle}"
                    Width="126" Height="23"
                    Canvas.Left="426" Canvas.Top="354" HorizontalAlignment="Left" VerticalAlignment="Center"/>
        </Canvas>
    </Grid>
</Page>
